// 
// Header file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#pragma once

#include <cstring>
#include <string>

namespace vortex::turb::legacy::settings
{

enum class ForcingType
{
    Deterministic,
    Stochastic
};

[[nodiscard]] inline constexpr char const * to_c_str( ForcingType value ) noexcept
{
    switch( value )
    {
    case ForcingType::Deterministic:
        return "deterministic";
    case ForcingType::Stochastic:
        return "stochastic";
    default:
        return "unknown";
    }
}

[[nodiscard]] inline std::string to_string( ForcingType value ) noexcept
{
    return std::string{ to_c_str( value ) };
}

[[nodiscard]] inline constexpr ForcingType to_forcing_type( char const * str ) noexcept
{
    if ( std::strcmp( str, "stochastic" ) == 0 )
    {
        return ForcingType::Stochastic;
    }
    return ForcingType::Deterministic;
}

[[nodiscard]] inline ForcingType to_forcing_type( std::string const& str ) noexcept
{
    return to_forcing_type( str.c_str() );
}

} // end of namespace vortex::turb::legacy::settings
