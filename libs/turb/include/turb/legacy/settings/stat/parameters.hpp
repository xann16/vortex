// 
// Header file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#pragma once

#include <ostream>
#include <string_view>
#include <span>

#include "core/common/types.hpp"
#include "turb/legacy/settings/enums/forcing_type.hpp"
#include "turb/legacy/settings/enums/drag_type.hpp"

namespace vortex::turb::legacy::settings::stat
{

struct Parameters
{
    i32 N = 8;
    i32 N_subdomain = 1;
    i32 Nt_max = 1;
    real dt = 0.001;
    real rnu = real{};
    real t_init = real{};
    bool is_flow_generated = true;
    u64 deterministic_seed = u64{};
    i32 input_velo_index = i32{};
    ForcingType forcing_type = ForcingType::Deterministic;
    real deterministic_forcing_k_1 = 1.0;
    real deterministic_forcing_k_2 = 1.0;
    u64 stochastic_seed = u64{};
    i32 stats_output_interval = i32{};
    i32 spectrum_output_interval = i32{};
    bool is_stats_output_extended = bool{};
    real rho_part = real{};
    real rho_fluid = real{};
    real eta_k_init = 1.0;
    real tau_k_init = 1.0;
    real shell_thickness = 1.0;
    real epsilon_env = real{};
    real nu_fluid = real{};
    real gravity = real{};
    bool is_part_generated = bool{};
    bool is_part_overlapping = bool{};
    bool is_part_hdi_enabled = bool{};
    real part_hdi_trunc_enabled = real{};
    i32 N_part = i32{};
    DragType drag_type = DragType::Stokes;
    real a = real{};

    [[nodiscard]] std::string to_string() const;
    std::ostream& stringify( std::ostream& os, int indent_size, int indent_level ) const;

    friend std::ostream& operator<<( std::ostream& os, Parameters const& s );

}; // end of class Parameters

} // end of namespace vortex::turb::legacy::settings::stat
