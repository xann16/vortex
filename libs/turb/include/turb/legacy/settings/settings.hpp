// 
// Header file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#pragma once

#include <nlohmann/json_fwd.hpp>

#include "core/common/types.hpp"
#include "turb/legacy/settings/metadata.hpp"
#include "turb/legacy/settings/parameters.hpp"
#include "turb/legacy/settings/execution_settings.hpp"

namespace vortex::turb::legacy::settings
{

class Settings
{
public:
    explicit Settings( nlohmann::json * data_p );

public:
    // "metadata" property
    [[nodiscard]] /* TODO: settings dynamic class */ void * metadata() const;
    [[nodiscard]] constexpr /* TODO: settings dynamic class */ void * default_metadata() const noexcept
    {
        return /* TODO: settings dynamic class constructor from nullptr */ nullptr;
    }

    // "parameters" property
    [[nodiscard]] /* TODO: settings dynamic class */ void * parameters() const;
    [[nodiscard]] constexpr /* TODO: settings dynamic class */ void * default_parameters() const noexcept
    {
        return /* TODO: settings dynamic class constructor from nullptr */ nullptr;
    }

    // "execution_settings" property
    [[nodiscard]] /* TODO: settings dynamic class */ void * execution_settings() const;
    [[nodiscard]] constexpr /* TODO: settings dynamic class */ void * default_execution_settings() const noexcept
    {
        return /* TODO: settings dynamic class constructor from nullptr */ nullptr;
    }


private:
    nlohmann::json * m_data_p = nullptr;
}; // end of class Settings

} // end of namespace vortex::turb::legacy::settings
