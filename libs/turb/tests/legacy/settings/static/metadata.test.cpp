// 
// Unit test source file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#include <catch2/catch_test_macros.hpp>
#include <catch2/matchers/catch_matchers_floating_point.hpp>

#include "turb/legacy/settings/static/metadata.hpp"

TEST_CASE( "Metadata - conversion to string", "[settings][.][!mayfail]" )
{
    // TODO - add conversion to string tests for generated static setting classes
    REQUIRE( false );
}

TEST_CASE( "Metadata - conversion to string - display all", "[settings][.][!mayfail]" )
{
    // TODO - add conversion to string tests for generated static setting classes
    REQUIRE( false );
}

TEST_CASE( "Metadata - conversion to string - extra indent size", "[settings][.][!mayfail]" )
{
    // TODO - add conversion to string tests for generated static setting classes
    REQUIRE( false );
}

TEST_CASE( "Metadata - conversion to string - extra indent level", "[settings][.][!mayfail]" )
{
    // TODO - add conversion to string tests for generated static setting classes
    REQUIRE( false );
}

TEST_CASE( "Metadata - conversion to string for empty", "[settings][.][!mayfail]" )
{
    // TODO - add conversion to string tests for generated static setting classes
    REQUIRE( false );
}

TEST_CASE( "Metadata - property: \"sim_method\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"particle_mode\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"gravity_type\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"particle_kernel_type\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"k_filter\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"C_K\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"target_Phi\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"superpart_factor\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"src_flow_path\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"src_part_path\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"part_output_delay\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"is_perf_full_profile_enabled\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"is_perf_simple_enabled\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"is_perf_part_dist_enabled\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"perf_full_start\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"perf_full_end\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}
TEST_CASE( "Metadata - property: \"part_perf_interval\" - static", "[settings]" )
{
    // TODO - supply test implementation
    REQUIRE( true );
}

