// 
// Unit test source file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#include <catch2/catch_test_macros.hpp>
#include <catch2/matchers/catch_matchers_floating_point.hpp>
#include <nlohmann/json.hpp>

#include "turb/legacy/settings/settings.hpp"

TEST_CASE( "Settings - Sample Test", "[sample]" )
{
    vortex::turb::legacy::settings::Settings( nullptr );

    REQUIRE( true );
}

// "metadata" property

TEST_CASE( "Settings - property: \"metadata\" - getter", "[settings]" )
{
    auto s_null = vortex::turb::legacy::settings::Settings{ nullptr };

    auto default_value = s_null.metadata();

    REQUIRE( default_value == nullptr );
}

// "parameters" property

TEST_CASE( "Settings - property: \"parameters\" - getter", "[settings]" )
{
    auto s_null = vortex::turb::legacy::settings::Settings{ nullptr };

    auto default_value = s_null.parameters();

    REQUIRE( default_value == nullptr );
}

// "execution_settings" property

TEST_CASE( "Settings - property: \"execution_settings\" - getter", "[settings]" )
{
    auto s_null = vortex::turb::legacy::settings::Settings{ nullptr };

    auto default_value = s_null.execution_settings();

    REQUIRE( default_value == nullptr );
}


