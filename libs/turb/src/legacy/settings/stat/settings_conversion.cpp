// 
// Source file auto-generated by VORTEX SETTINGS WIZARD
// 
// TODO: Just testing
// 

#include "turb/legacy/settings/stat/settings_conversion.hpp"

#include <cstring>

#include "turb/legacy/settings/stat/metadata_conversion.hpp"
#include "turb/legacy/settings/stat/parameters_conversion.hpp"
#include "turb/legacy/settings/stat/execution_settings_conversion.hpp"

namespace vortex::turb::legacy::settings
{

[[nodiscard]] stat::Settings to_static( Settings const& s, [[maybe_unused]] core::settings::StaticSettingsDataStorage& data_storage )
{
    s.validate();
    return to_static_unchecked( s, data_storage );
}

[[nodiscard]] stat::Settings to_static_unchecked( Settings const& s, [[maybe_unused]] core::settings::StaticSettingsDataStorage& data_storage )
{
    auto heap_data_p = data_storage.allocate( s.extra_data_size() );
    return to_static_unchecked( s, data_storage, &heap_data_p );
}

[[nodiscard]] stat::Settings to_static_unchecked( Settings const& s, [[maybe_unused]] core::settings::StaticSettingsDataStorage& data_storage, [[maybe_unused]] void ** data_offset_pp )
{
    return stat::Settings{ to_static_unchecked( s.metadata(), data_storage, data_offset_pp ), to_static_unchecked( s.parameters(), data_storage, data_offset_pp ), to_static_unchecked( s.execution_settings(), data_storage, data_offset_pp ) };
}

} // end of namespace vortex::turb::legacy::settings
